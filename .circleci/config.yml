version: 2

alias:
  - &install_dzil 
    run:
      command: |
        cpm install -g --no-test Dist::Zilla Dist::Zilla::App::Command::cover ExtUtils::MakeMaker
      name: Install Dzil
  - &install_author_deps
    run: 
      name: Install dzil author dependencies
      command: |
        # TODO remove this line before merge
        cpanm git@github.com:chylli-binary/perl-Dist-Zilla-PluginBundle-Author-DERIV.git@bumpversion
        cpm install -g \
        -w 2 \
        --mirror=http://cpan.cpantesters.org/ $(dzil authordeps --missing)
  - &install_deps
    run:
      name: Install dist deps
      command: |
        dzil listdeps --author --missing --cpanm-versions | xargs cpanm -n
 
jobs:
  test:
    parameters:
      perl-version:
        description: The Perl version we want to test with
        type: string
        default: "5.34"
    docker:
      - image: perldocker/perl-tester:<< parameters.perl-version >>
    steps:
      - checkout
      - *install_dzil
      - *install_author_deps
      - *install_deps
      - run:
          name: Run Tests
          command: |
            dzil smoke --release --author && dzil cover -test && dzil xtest
  release:
    docker:
      - image: perldocker/perl-tester:5.34
    steps:
      - checkout
      - *install_dzil
      - *install_author_deps
      - *install_deps
      - run:
          name: setup PAUSE account
          command: |
            echo -e "user $PAUSE_user\npassword $PAUSE_password\n" >> ~/.pause
      - run:
          name: setup git
          command: |
            git config --global user.email "circleci@binary.com"
            git config --global user.name "circleci"
            # set remote github because dzil will push to github
            # https://metacpan.org/release/DERIV/Dist-Zilla-PluginBundle-Author-DERIV-0.003/source/lib/Dist/Zilla/PluginBundle/Author/DERIV.pm#L122
            git remote add github $(git remote get-url origin)
      - run:
          name: Release to PAUSE
          command: |
            if grep -Pzq '\{\{\$NEXT\}\}\n\s*\n' Changes
            then
                echo "No changes, no need release"
                exit 0
            fi
            # TODO remove --trial before merge
            echo "y\n" | DZIL_CONFIRMRELEASE_DEFAULT=y dzil release --trial
            git push

workflows:
  build-workflow:
    jobs: &1
    - test:
        matrix:
          parameters:
            perl-version:
              - "5.24"
              - "5.26"
              - "5.28"
              - "5.30"
              - "5.32"
              - "5.34"
    - release:
       context: release_binary
       requires:
         - test
       filters:
         branches:
           only: 
           - master
version: 2.1
